# Chronos Scheduler Simulation Test Cases
# Tests bin-packing, extension minimization, consolidation logic, and QueueSort functionality

scenarios:
  
  # Test 1: Bin-packing - new job fits in existing completion time
  bin_packing_perfect_fit:
    description: "New job should fit perfectly in node with longest remaining time"
    new_pod:
      name: "test-bin-packing"
      duration: 30
      expected_node: "chronos-test-worker2"  # Node with 120s remaining (better consolidation)
      expected_strategy: "BIN-PACKING"
    setup_pods:
      chronos-test-worker:
        - name: "existing-job-1"
          duration: 60
        - name: "existing-job-2" 
          duration: 80
        # Max remaining: 80s, consolidation score: 1,008,000
      chronos-test-worker2:
        - name: "existing-job-3"
          duration: 120
        - name: "existing-job-4"
          duration: 90
        # Max remaining: 120s, consolidation score: 1,012,000 (WINNER!)
      # control-plane: empty (should be avoided due to empty node penalty)

  # Test 2: Extension minimization - new job extends completion time
  extension_minimal:
    description: "New job requires extension, choose node with minimal extension needed"
    new_pod:
      name: "test-extension"
      duration: 100
      expected_node: "chronos-test-worker2"  # Extension: 100-80=20s (minimal)
      expected_strategy: "EXTENSION"
    setup_pods:
      chronos-test-worker:
        - name: "existing-job-1"
          duration: 60
        - name: "existing-job-2"
          duration: 40  
        # Max remaining: 60s, extension needed: 100-60=40s
      chronos-test-worker2:
        - name: "existing-job-3"
          duration: 80
        - name: "existing-job-4"
          duration: 70
        # Max remaining: 80s, extension needed: 100-80=20s (better)

  # Test 3: Consolidation preference - choose longer remaining work
  consolidation_preference:
    description: "Between two nodes that can fit, choose one with longer remaining work"
    new_pod:
      name: "test-consolidation" 
      duration: 40
      expected_node: "chronos-test-worker2"  # 90s > 60s remaining
      expected_strategy: "BIN-PACKING"
    setup_pods:
      chronos-test-worker:
        - name: "existing-job-1"
          duration: 60
        # Max remaining: 60s, new job (40s) fits
      chronos-test-worker2:
        - name: "existing-job-2"
          duration: 90  
        # Max remaining: 90s, new job (40s) fits, better consolidation

  # Test 4: Empty node avoidance - heavily penalized
  empty_node_avoidance:
    description: "Avoid empty nodes when other options exist"
    new_pod:
      name: "test-empty-avoidance"
      duration: 50
      expected_node: "chronos-test-worker"  # Should prefer node with existing work
      expected_strategy: "BIN-PACKING"
    setup_pods:
      chronos-test-worker:
        - name: "existing-job-1"
          duration: 80
        # Max remaining: 80s, new job (50s) fits
      # chronos-test-worker2: empty - should be heavily penalized
      # control-plane: empty - should be avoided

  # Test 5: Extension job - choose minimal extension
  extension_job:
    description: "Job that extends all nodes, choose minimal extension"
    new_pod:
      name: "test-extension-job"
      duration: 120
      expected_node: "chronos-test-worker2"  # Extension: 120-100=20s (minimal)
      expected_strategy: "EXTENSION"  
    setup_pods:
      chronos-test-worker:
        - name: "existing-job-1"
          duration: 60
        - name: "existing-job-2"
          duration: 50
        - name: "existing-job-3"
          duration: 40
        # Max remaining: 60s, extension needed: 120-60=60s
      chronos-test-worker2:
        - name: "existing-job-4"
          duration: 100
        - name: "existing-job-5"
          duration: 80
        # Max remaining: 100s, extension needed: 120-100=20s (better)

  # Test 6: Equal remaining times - tie-breaking
  tie_breaking:
    description: "Equal remaining times should use resource-based tie-breaking"  
    new_pod:
      name: "test-tie-breaking"
      duration: 30
      expected_node: "any"  # Either node acceptable, depends on resource tie-breaker
      expected_strategy: "BIN-PACKING"
    setup_pods:
      chronos-test-worker:
        - name: "existing-job-1"
          duration: 70
        # Max remaining: 70s
      chronos-test-worker2:
        - name: "existing-job-2"
          duration: 70
        # Max remaining: 70s (equal)

  # ===== QUEUE SORT PLUGIN TESTS =====
  # These tests validate the QueueSort plugin functionality (LPT heuristic)
  
  # Test 7: Queue Sort LPT - Longest Processing Time First
  queuesort_longest_first:
    description: "Submit pods short->long->medium; expect them to be scheduled long->medium->short"
    test_pods:
      # These will be created in this specific order
      - name: "test-pod-short"
        duration: 60  # 1 minute
      - name: "test-pod-long"
        duration: 300 # 5 minutes
      - name: "test-pod-medium"
        duration: 120 # 2 minutes
    # This is the expected outcome of the QueueSort plugin
    expected_scheduling_order:
      - "test-pod-long"
      - "test-pod-medium"
      - "test-pod-short"
    
  # Test 8: Queue Sort with Priority Override
  queuesort_priority_override:
    description: "Priority should override duration-based sorting in queue"
    test_pods:
      - name: "low-priority-long"
        duration: 600  # Long duration but low priority
        priority: 100
      - name: "high-priority-short"
        duration: 60   # Short duration but high priority
        priority: 1000
      - name: "no-priority-medium"
        duration: 300  # Medium duration, no priority
        priority: null
    expected_scheduling_order:
      - "high-priority-short"  # High priority wins
      - "low-priority-long"    # Low priority but still has priority
      - "no-priority-medium"   # No priority comes last
    
  # Test 9: Queue Sort with Missing Duration Annotations  
  queuesort_missing_duration:
    description: "Pods without duration annotation should be scheduled last"
    test_pods:
      - name: "with-duration-long"
        duration: 300  # Has duration
      - name: "with-duration-short" 
        duration: 120  # Has shorter duration
      - name: "no-duration-1"
        duration: null  # No annotation
      - name: "no-duration-2"
        duration: null  # No annotation
    expected_scheduling_order:
      - "with-duration-long"   # Longest duration first
      - "with-duration-short"  # Shorter but still has duration
      - "no-duration-1"        # No duration (FIFO among missing)
      - "no-duration-2"        # No duration (FIFO among missing)
        
  # Test 10: Queue Sort FIFO Tie-breaking
  queuesort_fifo_tiebreaker:
    description: "Equal durations should use FIFO (creation time) ordering"
    test_pods:
      - name: "equal-duration-first"
        duration: 300  # Same duration
      - name: "equal-duration-second"
        duration: 300  # Same duration
      - name: "equal-duration-third"
        duration: 300  # Same duration
    expected_scheduling_order:
      - "equal-duration-first"   # First created
      - "equal-duration-second"  # Second created
      - "equal-duration-third"   # Third created
        
  # Test 11: Queue Sort Comprehensive Test
  queuesort_comprehensive:
    description: "Complex scenario with mixed priorities, durations, and missing annotations"
    test_pods:
      - name: "critical-short"
        duration: 30
        priority: 2000  # Highest priority
      - name: "high-long"
        duration: 3600
        priority: 1000  # High priority, long duration
      - name: "high-medium"
        duration: 1800
        priority: 1000  # High priority, medium duration
      - name: "normal-very-long"
        duration: 7200
        priority: 500   # Normal priority, very long
      - name: "normal-medium"
        duration: 900
        priority: 500   # Normal priority, medium
      - name: "no-priority-long"
        duration: 2400
        priority: null  # No priority, long duration
      - name: "no-priority-short"
        duration: 300
        priority: null  # No priority, short duration
      - name: "no-annotation"
        duration: null  # No duration annotation
        priority: null
    expected_scheduling_order:
      - "critical-short"        # Priority 2000 wins
      - "high-long"            # Priority 1000, longer duration
      - "high-medium"          # Priority 1000, shorter duration
      - "normal-very-long"     # Priority 500, longest duration
      - "normal-medium"        # Priority 500, shorter duration  
      - "no-priority-long"     # No priority, longer duration
      - "no-priority-short"    # No priority, shorter duration
      - "no-annotation"        # No annotation comes last

# Test execution configuration - optimized for speed and reliability
execution:
  # Optimized wait times for fast and reliable testing
  setup_wait_time: 2     # Slightly longer for burst pod creation
  test_wait_time: 3      # More time for queue sort to process multiple pods
  timeout: 180           # Extended timeout for comprehensive queue sort tests
  polling_interval: 1    # Fast polling for scheduling status
  cleanup_wait: 3        # More cleanup time for burst tests
  namespace: "simulation-test"
  
  # Queue sort specific settings
  burst_creation_interval: 0.5  # Delay between burst pod creation (seconds)
  queue_sort_wait_time: 3       # Wait time for QueueSort plugin to sort the queue
  max_burst_pods: 15            # Maximum number of pods in burst tests
  
  # Node cordoning method settings (100% reliable QueueSort testing)
  use_cordon_method: true       # Enable node cordoning method (most reliable)
  cordon_timeout: 30            # Timeout for cordoning operations (seconds)
  uncordon_delay: 2             # Delay before uncordoning to ensure queue processing
  
  # Logging and validation settings  
  enable_verbose_logging: true  # Enable v4+ logging for queue sort validation
  log_level: 4                  # Set klog verbosity level to 4 for debugging
  validate_queue_order: true    # Validate that pods are scheduled in expected order
  
  # Overall execution timeout
  overall_timeout_minutes: 10   # Maximum time for all scenarios (default: 10 minutes)
